    La classe HttpResponse est une structure simple qui stocke :

        Le code de statut HTTP (ex : 200, 404).

        Le message associé (ex : "OK", "Not Found").

        Les en-têtes HTTP sous forme d’un std::map<string,string>.

        Le corps de la réponse (string).

    Elle expose des méthodes claires pour définir le statut, ajouter/modifier des headers, et définir le corps.

    Elle reste volontairement simple pour servir de conteneur de données.




 HttpResponseBuilder : Construction de la Réponse

    C’est la classe qui orchestre la génération de la réponse à partir d’une requête valide.

    Elle reçoit un HttpRequest et un RequestValidator pour récupérer toutes les infos nécessaires.

    Elle contient les méthodes principales pour gérer chaque méthode HTTP :

        handleGET() :

            Résout le chemin vers la ressource demandée.

            Vérifie si la ressource existe.

            Si c’est un dossier et que l’autoindex est activé, génère dynamiquement une page listant le contenu.

            Récupère le contenu et le type MIME, puis remplit l’objet HttpResponse.

        handlePOST() :

            Si CGI configuré, exécute le script CGI et récupère sa sortie.

            Sinon, répond avec le corps reçu.

        handleDELETE() :

            Supprime la ressource ciblée si elle existe.

    Elle gère aussi la construction des pages d’erreur en cas de problème, en s’appuyant sur la config et le validator. sendCustomError dans le catch du readcallback




 Fonction resolveTargetPath()

    Fonction utilitaire qui assemble la racine du serveur (ex : /var/www/html) et le chemin demandé (/index.html ou /).

    Ajoute automatiquement le fichier par défaut (ex : index.html) si le chemin cible un dossier.

    Assure que le chemin retourné est un chemin absolu vers la ressource réelle.





 Gestion du MIME Type

    La fonction ou utilitaire MIME permet de déterminer le type de contenu (ex : text/html, image/png) à partir de l’extension du fichier demandé.

    Cela permet de renseigner correctement l’en-tête Content-Type dans la réponse HTTP.



     ResponseFormatter

    Transforme l’objet HttpResponse en une chaîne complète respectant le protocole HTTP :

        Status line : HTTP/1.1 200 OK\r\n

        En-têtes formatés ligne par ligne.

        Séparation par une ligne vide.

        Le corps.

    Cette chaîne est ensuite prête à être envoyée sur le socket via ton callback writeCallback.execute().

// TO DO LUNDI :

Fanny : Test unitaire sur toutes les nouvelles fonctions

Jerome ou Antoine : Implementer et test unitaire runcgiScript (voir ctrl clic HttpBuilder.cpp ligne 118)

Antoine ou Jerome : Implementer et test unitaire storeuploadedFile (voir ctrl clic HttpBuilder.cpp ligne 126)

Ensemble ? : Implementer le write callback mis en commentaire dans readcallback.cpp ligne 89 a 91

Question : 
Beaucoup de throw Httpexception depuis le parsing de requete jusquau formattage de la reponse :
 est ce quil faut ajouter des logs ?
est ce quon devrait pas mettre le senderror et sendcustomerror dans la callbackerrorqueue ? 
 ainsi que le write ? 


Demander a task manager ou en en est je suis perdue 